/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define BT_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
	
	combo_esc {
	    timeout-ms = <50>;
	    key-positions = <0 1>;
	    layers = <0>;		// Optional list of layers that this combo is available on
	    bindings = <&kp ESC>;
	};

        med_mo {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo BT_L>;
        };

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo MED_L>;
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp QUOT   &kp COMMA  &kp DOT     &kp P          &kp Y           &kp F          &kp G          &kp C       &kp R      &kp L
                &hm LGUI A &hm LALT O &hm LCTRL E &hm LSHFT U    &kp I           &kp D          &hm RSHFT H    &hm RCTRL T &hm LALT N &hm LGUI S
                &kp SEMI   &kp Q      &kp J       &kp K          &kp X           &kp B          &kp M          &kp W       &kp V      &kp Z
                                                  &lt NAV_L TAB  &lt NUM_L SPACE &lt SYM_L BKSP &lt FUN_L RET
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW    &kp UARW   &kp RARW
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                                                  &trans          &trans       &kp ESC          &kp DEL
            >;
        };

        bluetooth_layer {
            label = "Bluetooth";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &trans     &trans     &trans     &trans     &trans          &kp KP_SLASH    &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_MINUS
                &trans     &trans     &trans     &trans     &kp KP_NLCK     &kp KP_ASTERISK &kp KP_N4     &kp KP_N5     &kp KP_N6     &kp KP_PLUS
                &trans     &trans     &trans     &trans     &trans          &kp KP_ENTER    &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_DOT
                                                 &trans     &trans          &kp BKSP        &kp KP_N0
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &trans &trans   &trans    &trans    &trans
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &trans &trans   &trans    &trans    &trans
                &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &trans &trans   &trans    &trans    &trans
                                                   &kp LS(N0) &kp UNDER         &trans &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans        &trans       &trans     &trans           &trans     &trans      &trans       &trans       &trans
                &kp C_PREV &kp C_VOL_DN  &kp C_VOL_UP &kp C_NEXT &trans           &trans     &trans      &trans       &trans       &trans
                &trans     &trans        &trans       &trans     &trans           &trans     &trans      &trans       &trans       &trans
                                                      &kp C_STOP &kp C_PLAY_PAUSE &trans     &trans       
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F1      &kp F2     &kp F3      &kp F4     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F5      &kp F6     &kp F7      &kp F8     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F9      &kp F10    &kp F11     &kp F12    &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
    };
};

